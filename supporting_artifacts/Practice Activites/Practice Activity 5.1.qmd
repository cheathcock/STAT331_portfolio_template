---
title: "Practice Activity 5.1"
author: Camille Heathcock
format: 
  html:
    self-contained: true
editor: visual
---

```{r}
#| echo: False 
#| output: False
library(tidyverse)
library(tidyr)
library(stringr)
message <- read_csv("https://www.dropbox.com/s/lgpn3vmksk3ssdo/scrambled_message.txt?dl=1") %>% 
  pull(Word)
```

### Warm up Exercises

1.  How many characters are in the scrambled message

```{r}
message |> 
  str_length() |> 
  sum()
```

2.  How many words are in the scrambled message?

```{r}
message |> 
  length()
```

3.  Print out every piece of a word in the scrambled message that starts with the letter "m".

```{r}
message |> 
  str_subset("^m")
```

4.  Print out every piece of a word in the scrambled message that ends with the letter "z"

```{r}
message |> 
  str_subset("z$")
```

5.  Print out every punctuation symbol in the scrambled message.

```{r}
message |> 
  str_subset("[:punct:]")
```

6.  Print out the longest word in the scrambled message.

```{r}
message[str_length(message) == max(str_length(message))]
```

### Decode Message

1.  Remove any spaces before or after each word.

```{r}
message |> 
  str_trim(side = "both")
```

2.  No word should be longer than 16 characters. Drop all extra characters off the end of each word.

```{r}
message |>  
  str_trunc(width = 16, side = "right")
```

3.  Any time you see the word "ugh", with any number of h's, followed by a punctuation mark, delete this.

```{r}
message |> 
  str_replace_all("ug(h+)(?=[:punct:])", "")
```

4.  Replace all instances of exactly 2 a's with exactly 2 e's.

```{r}
message |> 
  str_replace_all("a{2}", "ee")
```

5.  Replace all z's with t's.

```{r}
message |> 
  str_replace_all("z", "t")
```

6.  Every word that ends in b, change that to a y.

```{r}
message |> 
  str_replace_all("b$", "y")
```

7.  Every word that starts with k, change that to a v.

```{r}
message |> 
  str_replace_all("^k", "v")
```

8.  Use `str_c()` to recombine all your words into a message

```{r}
message |> 
  str_flatten(collapse = " ")
```

```{r}
message |> 
  str_trim(side = "both") |> 
  str_trunc(width = 16, side = "right", ellipsis = "") |> 
  str_replace_all("ug(h+)(?=[:punct:])", "") |> 
  str_replace_all("a{2}", "ee") |> 
  str_replace_all("z", "t") |> 
  str_replace_all("b$", "y") |> 
  str_replace_all("^[kK]", "v") |> 
  str_flatten(collapse = " ")
```
